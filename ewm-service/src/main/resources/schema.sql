CREATE TABLE IF NOT EXISTS users (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(50) NOT NULL UNIQUE
    );

CREATE TABLE IF NOT EXISTS categories (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    name VARCHAR(255) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS events (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    annotation VARCHAR(1000) NOT NULL,
    category_id BIGINT REFERENCES categories (id) ON DELETE RESTRICT,
    description VARCHAR(4000) NOT NULL,
    event_date TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    lat REAL NOT NULL,
    lon REAL NOT NULL,
    paid BOOLEAN DEFAULT FALSE,
    participant_limit  INTEGER DEFAULT 0,
    request_moderation BOOLEAN DEFAULT TRUE,
    title VARCHAR(120) NOT NULL,
    confirmed_requests INTEGER DEFAULT 0,
    created_on TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    initiator BIGINT REFERENCES users (id) ON DELETE RESTRICT,
    published_on TIMESTAMP WITHOUT TIME ZONE,
    state VARCHAR,
    views BIGINT DEFAULT 0
);

CREATE TABLE IF NOT EXISTS requests (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    created TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    event_id BIGINT REFERENCES events (id) ON DELETE RESTRICT,
    requester_id BIGINT REFERENCES users (id) ON DELETE RESTRICT,
    status VARCHAR,
    CONSTRAINT uq_request UNIQUE (event_id, requester_id)
);

CREATE TABLE IF NOT EXISTS compilations (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    pinned BOOLEAN DEFAULT FALSE,
    title VARCHAR NOT NULL
);

CREATE TABLE IF NOT EXISTS event_compilations (
    compilation_id BIGINT REFERENCES compilations(id) ON DELETE RESTRICT,
    event_id BIGINT REFERENCES events(id) ON DELETE RESTRICT,
    PRIMARY KEY (compilation_id, event_id)
);

CREATE TABLE IF NOT EXISTS comments (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    text VARCHAR(5000) NOT NULL,
    state VARCHAR,
    created TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    author_id BIGINT REFERENCES users(id) ON DELETE RESTRICT,
    event_id BIGINT REFERENCES events(id) ON DELETE RESTRICT
);

